{
  "AWSTemplateFormatVersion" : "2010-09-09",
  
  "Description" : "Hadoop Cluster CloudFormation Template",
  
  "Parameters" : {
    "MasterInstanceType" : {
      "Description" : "Master Instance Type",
      "Type" : "String",
      "Default" : "m3.large"
    },
    "SlaveInstanceType" : {
      "Description" : "Slave Instance Type",
      "Type" : "String",
      "Default" : "m3.large"
    },
    "KeyName" : {
      "Description" : "The EC2 Key Pair to allow SSH access to the instances",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "Default" : "default"
    }
  },
  
  "Mappings" : {
    
    "AWSRegionAZCount" : {
      "us-east-1"      : { "AZCount" : "4"},
      "us-west-1"      : { "AZCount" : "2"},
      "us-west-2"      : { "AZCount" : "3"},
      "eu-west-1"      : { "AZCount" : "3"},
      "eu-central-1"   : { "AZCount" : "2"},
      "sa-east-1"      : { "AZCount" : "3"},
      "ap-southeast-1" : { "AZCount" : "2"},
      "ap-southeast-2" : { "AZCount" : "2"},
      "ap-northeast-1" : { "AZCount" : "2"}
    },
    
    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "AMI" : "ami-60b6c60a" },
      "us-west-1"      : { "AMI" : "ami-d5ea86b5" },
      "us-west-2"      : { "AMI" : "ami-f0091d91" },
      "eu-west-1"      : { "AMI" : "ami-bff32ccc" },
      "eu-central-1"   : { "AMI" : "ami-bc5b48d0" },
      "ap-southeast-1" : { "AMI" : "ami-c9b572aa" },
      "ap-southeast-2" : { "AMI" : "ami-48d38c2b" },
      "ap-northeast-1" : { "AMI" : "ami-383c1956" },
      "sa-east-1"      : { "AMI" : "ami-6817af04" }      
    }
  },
  
  "Conditions" : {
    "ThreeAZs" : { "Fn::Equals" : [{ "Fn::FindInMap" : [ "AWSRegionAZCount", { "Ref" : "AWS::Region" }, "AZCount" ] }, "3" ]},
    "FourAZs"  : { "Fn::Equals" : [{ "Fn::FindInMap" : [ "AWSRegionAZCount", { "Ref" : "AWS::Region" }, "AZCount" ] }, "4" ]},
    
    "ThreeOrMoreAZs" : {
      "Fn::Or" : [
        {"Condition" : "ThreeAZs"},
        {"Condition" : "FourAZs"}
      ]
    }
  },
  
  "Resources" : {
    
    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "10.10.0.0/16",
        "EnableDnsHostnames" : "true"
      }
    },
    
    "IGW" : {
      "Type" : "AWS::EC2::InternetGateway"
    },
    
    "VPCGatewayAttachment" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "InternetGatewayId" : { "Ref" : "IGW" },
        "VpcId" : { "Ref" : "VPC" }
      }
    },
    
    "VPCPublicSubnetRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" }
      }
    },
    
    "VPCPublicIGWRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "VPCPublicSubnetRouteTable" },
        "GatewayId" : { "Ref" : "IGW"},
        "DestinationCidrBlock" : "0.0.0.0/0"
      }
    },
    
    "VPCPublicRouteTableAssocSubnetA" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "VPCPublicSubnetRouteTable" },
        "SubnetId" : { "Ref" : "SubnetA" }
      }
    },
    
    "VPCPublicRouteTableAssocSubnetB" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "VPCPublicSubnetRouteTable" },
        "SubnetId" : { "Ref" : "SubnetB" }
      }
    },
    
    "VPCPublicRouteTableAssocSubnetC" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Condition" : "ThreeOrMoreAZs",
      "Properties" : {
        "RouteTableId" : { "Ref" : "VPCPublicSubnetRouteTable" },
        "SubnetId" : { "Ref" : "SubnetC" }
      }
    },

    "VPCPublicRouteTableAssocSubnetD" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Condition" : "FourAZs",
      "Properties" : {
        "RouteTableId" : { "Ref" : "VPCPublicSubnetRouteTable" },
        "SubnetId" : { "Ref" : "SubnetD" }
      }
    },
    
    "SubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.10.1.0/24",
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ]}
      }
    },
    
    "SubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.10.2.0/24",
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ]}
      }
    },
    
    "SubnetC" : {
      "Type" : "AWS::EC2::Subnet",
      "Condition" : "ThreeOrMoreAZs",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.10.3.0/24",
        "AvailabilityZone" : { "Fn::Select" : [ "2", { "Fn::GetAZs" : "" } ]}
      }
    },

    "SubnetD" : {
      "Type" : "AWS::EC2::Subnet",
      "Condition" : "FourAZs",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.10.4.0/24",
        "AvailabilityZone" : { "Fn::Select" : [ "3", { "Fn::GetAZs" : "" } ]}
      }
    },
    
    "ClusterSG" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Cluster Security Group",
        "VpcId" : { "Ref" : "VPC" }
      }
    },
    
    "ClusterSGSelfIngress" : {
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : {
        "GroupId" : { "Ref" : "ClusterSG" },
        "IpProtocol" : "-1",
        "ToPort" : "65535",
        "FromPort" : "0",
        "SourceSecurityGroupId" : { "Ref" : "ClusterSG" }
      }
    },
    
    "ClusterIAMRole" : {
      "Type": "AWS::IAM::Role",
      "Properties" : {
        "AssumeRolePolicyDocument" : {
          "Version" : "2012-10-17",
          "Statement" : [ {
            "Effect" : "Allow",
            "Principal" : {
              "Service" : [ "ec2.amazonaws.com" ]
            },
            "Action" : [ "sts:AssumeRole" ]
          }]
        },
        
        "Path" : "/",
        
        "Policies" : [ {
          "PolicyName" : "ControllerPolicy",
          "PolicyDocument" : {
            "Version" : "2012-10-17",
            "Statement" : [
              {
                "Effect":"Allow",
                "Action":[
                  "ecs:CreateCluster",
                  "ecs:RegisterContainerInstance",
                  "ecs:DeregisterContainerInstance",
                  "ecs:DiscoverPollEndpoint",
                  "ecs:Submit*",
                  "ecs:Poll",
                  "s3:Get*",
                  "s3:List*",
                  "s3:PutObject",
                  "sqs:Send*",
                  "sqs:Receive*",
                  "sqs:DeleteMessage"
                ],
                "Resource":"*"
              },
              {
                "Effect":"Deny",
                "Action":"iam:*",
                "Resource":"*"
              }
            ]
          }
        }]
      }
    },
    
    "ClusterInstProfile" : {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties" : {
        "Path" : "/",
        "Roles" : [ { "Ref" : "ClusterIAMRole" } ]
      }
    },
    
    "MasterEip" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },
    
    "MasterLaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "rpm" : {
                "chefdk" : "https://opscode-omnibus-packages.s3.amazonaws.com/el/7/x86_64/chefdk-0.9.0-1.el7.x86_64.rpm"
              }
            },
            "sources" : {
              "/root/bootstrap" : "https://github.com/vinayselvaraj/hadoop-cluster/tarball/master"
            },
            "files" : {
              "/tmp/associate_eip.sh" : {
                "content" : { "Fn::Join" : ["", [
                  "#!/bin/bash\n",
                  "INSTANCE_ID=`curl -s  http://169.254.169.254/latest/meta-data/instance-id`\n",
                  "ALLOCATION_ID=", { "Fn::GetAtt" : [ "MasterEip", "AllocationId" ]}, "\n",
                  "EC2_REGION=", { "Ref": "AWS::Region"}, "\n",
                  "aws ec2 --region $EC2_REGION associate-address --allocation-id $ALLOCATION_ID --instance-id $INSTANCE_ID --allow-reassociation\n"
                ]]},
                "mode" : "000755",
                "owner" : "root",
                "group" : "root"
              },
              "/tmp/setup.sh" : {
                "content" : { "Fn::Join" : ["", [
                  "#!/bin/bash\n",
                  "until /tmp/associate_eip.sh\n",
                   "do\n",
                   "  sleep 15\n",
                   "done\n"
                ]]},
                "mode" : "000755",
                "owner" : "root",
                "group" : "root"
              }
            },
            "commands" : {
              "runSetup" : {
                "command" : "/tmp/setup.sh"
              }
            }
          }
        }
      },
      "Properties" : {
        "KeyName" : { "Ref" : "KeyName" },
        "AssociatePublicIpAddress" : "true",
        "IamInstanceProfile" : { "Ref" : "ClusterInstProfile" },
        "ImageId" : {
          "Fn::FindInMap" : [
            "AWSRegionArch2AMI",
            { "Ref" : "AWS::Region" },
            "AMI"
          ]
        },
        "InstanceType" : { "Ref" : "MasterInstanceType" },
        "SecurityGroups" : [ { "Ref" : "ClusterSG" } ],
        "UserData"        : {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "/opt/aws/bin/cfn-init --region ", 
                  { "Ref": "AWS::Region"}, 
                  " -s ", { "Ref" : "AWS::StackName" }, 
                  " -r SlaveLaunchConfig"
              ]
            ]
          }
        }
      }
    },
    
    "MasterAutoScalingGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "LaunchConfigurationName" : { "Ref" : "MasterLaunchConfig" },
        "VPCZoneIdentifier" : {
          "Fn::If" : [ 
            "FourAZs",
            [ { "Ref" : "SubnetA" }, { "Ref" : "SubnetB" }, { "Ref" : "SubnetC" }, { "Ref" : "SubnetD" } ],
            {"Fn::If" : [
              "ThreeAZs",
              [ { "Ref" : "SubnetA" }, { "Ref" : "SubnetB" }, { "Ref" : "SubnetC" }],
              [ { "Ref" : "SubnetA" }, { "Ref" : "SubnetB" }]
            ]}
          ]
          
        },
        "MinSize" : "1",
        "MaxSize" : "1",
        "Tags" : [
          { "Key" : "Name", "Value" : "hadoop-master", "PropagateAtLaunch" : "true" }
        ]
      }
    },
    
    "SlaveLaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "rpm" : {
                "chefdk" : "https://opscode-omnibus-packages.s3.amazonaws.com/el/7/x86_64/chefdk-0.9.0-1.el7.x86_64.rpm"
              }
            },
            "sources" : {
              "/root/bootstrap" : "https://github.com/vinayselvaraj/hadoop-cluster/tarball/master"
            }
          }
        }
      },
      "Properties" : {
        "KeyName" : { "Ref" : "KeyName" },
        "AssociatePublicIpAddress" : "true",
        "IamInstanceProfile" : { "Ref" : "ClusterInstProfile" },
        "ImageId" : {
          "Fn::FindInMap" : [
            "AWSRegionArch2AMI",
            { "Ref" : "AWS::Region" },
            "AMI"
          ]
        },
        "InstanceType" : { "Ref" : "SlaveInstanceType" },
        "SecurityGroups" : [ { "Ref" : "ClusterSG" } ],
        "UserData"        : {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "/opt/aws/bin/cfn-init --region ", 
                  { "Ref": "AWS::Region"}, 
                  " -s ", { "Ref" : "AWS::StackName" }, 
                  " -r SlaveLaunchConfig"
              ]
            ]
          }
        }
      }
    },
    
    "SlaveAutoScalingGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "LaunchConfigurationName" : { "Ref" : "SlaveLaunchConfig" },
        "VPCZoneIdentifier" : {
          "Fn::If" : [ 
            "FourAZs",
            [ { "Ref" : "SubnetA" }, { "Ref" : "SubnetB" }, { "Ref" : "SubnetC" }, { "Ref" : "SubnetD" } ],
            {"Fn::If" : [
              "ThreeAZs",
              [ { "Ref" : "SubnetA" }, { "Ref" : "SubnetB" }, { "Ref" : "SubnetC" }],
              [ { "Ref" : "SubnetA" }, { "Ref" : "SubnetB" }]
            ]}
          ]
          
        },
        "MinSize" : "1",
        "MaxSize" : "10",
        "Tags" : [
          { "Key" : "Name", "Value" : "hadoop-slave", "PropagateAtLaunch" : "true" }
        ]
      }
    }
    
  }
  
  
}
